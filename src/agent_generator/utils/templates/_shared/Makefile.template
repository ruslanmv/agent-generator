# Makefile for {project_name}
# Generated by: {author_name}
# Framework: {build_category}
# =================================================================
#
# To see a list of available commands, run:
#   make help
#
# =================================================================

# Ensure that the script is run with bash
SHELL := /bin/bash
# Default target executed when you run `make`
.DEFAULT_GOAL := help
# Disable echoing of commands
.SILENT:
# Phony targets are not files
.PHONY: help install run docker-build docker-run clean

# =================================================================
# --- Main Targets ---
# =================================================================

install: ## ✨ Install dependencies and create a local .venv
	@echo "--> Configuring Poetry to use a local .venv folder..."
	poetry config virtualenvs.in-project true
	@echo "--> Installing dependencies..."
	poetry install --no-root

run: ## 🚀 Run the main application
	@echo "--> Running the main script..."
	poetry run python src/main.py

docker-build: ## 🐳 Build the Docker image for the application
	@echo "--> Building Docker image: {project_name}-app..."
	docker build -t {project_name}-app .

docker-run: ## 🐳 Run the application inside a Docker container
	@echo "--> Running Docker container..."
	docker run --rm -it --env-file .env {project_name}-app

clean: ## 🗑️ Remove virtual environment and temporary files
	@echo "--> Cleaning up project..."
	rm -rf .venv .pytest_cache .ruff_cache
	find . -type d -name "__pycache__" -exec rm -r {{}} +
	@echo "--> Cleanup complete."

help: ## 💬 Show this help message
	@echo "Usage: make [target]"
	@echo ""
	@echo "Targets:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | \
		sort | \
		awk 'BEGIN {{FS = ":.*?## "}}; {{printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2}}'