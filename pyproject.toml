# ────────────────────────────────────────────────────────────────
#  pyproject.toml  •  build + metadata for agent‑generator
# ────────────────────────────────────────────────────────────────

[build-system]
requires      = ["hatchling>=1.18"]
build-backend = "hatchling.build"

[project]
name            = "agent-generator"
version         = "0.1.0"
description     = "Turn plain‑English requirements into fully‑configured multi‑agent AI teams (CrewAI, LangGraph, ReAct, WatsonX Orchestrate)."
readme          = "README.md"
requires-python = ">=3.9"
license         = { file = "LICENSE" }
authors         = [
  { name = "Ruslan M. V.", email = "contact@ruslanmv.com" }
]
keywords = [
  "multi-agent",
  "crew-ai",
  "langchain",
  "watsonx-ai",
  "orchestrate",
  "LLM",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Framework :: FastAPI",
  "Framework :: Flask",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Utilities",
]

# -----------------------------------------------------------------
# Core runtime dependencies (WatsonX provider + Python generators)
# -----------------------------------------------------------------
dependencies = [
  "pydantic>=2.6",
  "pydantic-settings>=2.10",
  "python-dotenv>=1.0",
  "typer[all]>=0.12",
  "jinja2>=3.1",
  "requests>=2.31",
  "rich>=13.7",
  "structlog>=23.2",
  "fastapi>=0.110",        # MCP wrapper
  "uvicorn>=0.29",
  "pyyaml>=6.0",           # YAML generator & tests
]

# -----------------------------------------------------------------
# Optional extras
# -----------------------------------------------------------------
[project.optional-dependencies]
openai = [
  "openai>=1.30",
]
web = [
  "flask>=3.0",
  "gunicorn>=21.2",
  "jinja2>=3.1",
]
dev = [
  # testing & linting
  "pytest>=8.2",
  "pytest-xdist>=3.5",
  "mypy>=1.10",
  "ruff>=0.4",
  "black>=24.4",
  "isort>=5.0",
  "pre-commit>=3.7",
  # docs
  "mkdocs>=1.6",
  "mkdocs-material>=9.5",
]

# -----------------------------------------------------------------
# CLI entry‑point
# -----------------------------------------------------------------
[project.scripts]
agent-generator = "agent_generator.cli:_main"

# -----------------------------------------------------------------
# URLs
# -----------------------------------------------------------------
[project.urls]
Homepage   = "https://github.com/ruslanmv/agent-generator"
Repository = "https://github.com/ruslanmv/agent-generator"
Issues     = "https://github.com/ruslanmv/agent-generator/issues"

# -----------------------------------------------------------------
# Ruff configuration (moved into `lint` section per new warning)
# -----------------------------------------------------------------
[tool.ruff.lint]
ignore = ["F841"]

# -----------------------------------------------------------------
# Hatchling configuration (just to include package in src/)
# -----------------------------------------------------------------
[tool.hatch.build.targets.wheel]
packages = ["src/agent_generator"]
