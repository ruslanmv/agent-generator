name: ðŸ“¦ Build & Publish Docker Image on Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release tag (e.g. v1.2.3)'
        required: true

permissions:
  contents: read       # to checkout code
  packages: write      # to push images

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Determine RELEASE_TAG
      - name: Set RELEASE_TAG
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi

      # 3) Log in to Docker Hub
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4) (Optional) QEMU for multiâ€‘arch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 5) Build & push with both tags
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/agent-creator:latest
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/agent-creator:${{ env.RELEASE_TAG }}

      # 6) Verify
      - name: Verify pushed image
        run: |
          docker pull docker.io/${{ secrets.DOCKERHUB_USERNAME }}/agent-creator:${{ env.RELEASE_TAG }}
          docker images docker.io/${{ secrets.DOCKERHUB_USERNAME }}/agent-creator
